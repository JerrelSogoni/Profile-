-- - Obtain a sales report for a particular month
SELECT * FROM Sales
    WHERE MONTH(TransDate) = ?;
    
-- - Produce a comprehensive listing of all items being advertised on the site
SELECT * FROM AdData A, Employee E WHERE A.EmpId = E.SSN;

-- - Produce a list of transactions by item name or by user name
SELECT * 
FROM 
Sales S, Buy B
  WHERE 
  S.TransId = B.TransId AND
  S.AdId = (SELECT A.AdId FROM AdData A WHERE A.ItemName = ?);
  
SELECT
    B.UserId, SUM(S.NumOfUnits * A.UnitPrice) AS total
FROM
    AdData A, Buy B, Sales S
WHERE 
	S.TransId = B.TransId AND
    S.AdId = A.AdId AND
    B.UserId = ( SELECT U.UserId FROM UserPlus U WHERE U.LastName = ? AND U.FirstName = ?)
GROUP BY
	B.UserId;

-- - Produce a summary listing of revenue generated by a particular item, item type, or customer
SELECT
    A.Itemname, SUM(S.NumOfUnits * A.UnitPrice) AS total
FROM
    AdData A, Buy B, Sales S
WHERE 
	S.TransId = B.TransId AND
    S.AdId = A.AdId AND
    A.AdId = ( SELECT AdId FROM AdData A2 WHERE A2.ItemName = ?)
GROUP BY
	A.Itemname;

SELECT
    A.Type, SUM(S.NumOfUnits * A.UnitPrice) AS total
FROM
    AdData A, Buy B, Sales S
WHERE 
	S.TransId = B.TransId AND
    S.AdId = A.AdId AND
    A.AdId in ( SELECT AdId FROM AdData A2 WHERE A2.Type = ?)
GROUP BY
	A.Type;
    
SELECT
    SUM(S.NumOfUnits * A.UnitPrice) AS total
FROM
    AdData A, Buy B, Sales S
WHERE 
	S.TransId = B.TransId AND
    S.AdId = A.AdId AND
    B.UserId in (SELECT UserId FROM UserPlus U WHERE U.LastName = ? AND U.FirstName = ?)
GROUP BY
	B.UserId;

-- - Determine which customer representative generated most total revenue
SELECT 
    T.who, SUM(bought) AS total
FROM
    (SELECT 
        B.EmpId AS who, (A.UnitPrice * S.NumOfUnits) AS bought
    FROM
        AdData A, Sales S, Buy B
    WHERE
        A.AdId = S.AdId
            AND B.TransId = S.TransId) T
GROUP BY T.who
ORDER BY total DESC;

-- - Determine which customer generated most total revenue
SELECT 
    U.FirstName, U.LastName, SUM(sales) AS total
FROM
	UserPlus U,
    (SELECT 
        B.UserId AS who, (A.UnitPrice * S.NumOfUnits) AS sales
    FROM
        AdData A, Sales S, Buy B
    WHERE
        A.AdId = S.AdId
            AND B.TransId = S.TransId) T
WHERE U.UserId = T.who
GROUP BY T.who
ORDER BY total DESC;

-- - Produce a list of most active items?
CREATE VIEW ActiveItems AS
    SELECT 
        A.ItemName
    FROM
        AdData A
    WHERE
        (SELECT 
                COUNT(*)
            FROM
                Sales S
            WHERE
                S.AdId = A.AdId) > 20;

-- - Produce a list of all customers who have purchased a particular item
CREATE VIEW ItemPurchasers AS
    SELECT 
        *
    FROM
        UserPlus U
    WHERE
        EXISTS (SELECT 
                *
            FROM
                AdData A,
                Buy B,
                Sales S
            WHERE
                A.AdId = ? AND A.AdId = S.AdId
                    AND S.TransId = B.TransId
                    AND U.UserId = B.UserId);
           
-- - Produce a list of all items for a given company
CREATE VIEW CompanyItems AS 
  SELECT A.ItemName 
    FROM AdData A
      WHERE A.Company = ?;

-- Customer-Representative-Level Transactions
-- Customer Representatives should be thought of as sales agents and should be able to:
-- - Create an advertisement
INSERT INTO AdData(AdId, EmpId, Type, Company, ItemName, Content, UnitPrice, NumOfAvaUnits) values (?, ?, ?, ?, ?, ?, ?, ?);

-- - Delete an advertisement
DELETE FROM AdData WHERE AdId = ?;

-- - Record a transaction
INSERT INTO Sales(TransId, TransDate, TransTime, AdId, NumOfUnits, AccountNum) value (?, ?, ?, ?, ?, ?);
INSERT INTO Buy(TransId, EmpId, UserId) values (?, ?, ?);

-- - Add, Edit and Delete information for a customer
-- Skip (Sullstice)

-- - Produce customer mailing lists
CREATE VIEW MailingList_Google AS
    SELECT 
        A.Company, U.Email
    FROM
        Buy B,
        Sales S,
        AdData A,
        UserPlus U
    WHERE
        B.TransId = S.TransId
            AND B.UserId = U.UserId
            AND A.AdId = S.AdId
            AND A.Company = ?;

-- - Produce a list of item suggestions for a given customer (based on that customer's past transactions)
SELECT * FROM AdData A1
	WHERE A1.Type IN (
    SELECT Type 
    FROM AdData A2, Buy B, Sales S 
    WHERE B.TransId = S.TransId AND S.AdId = A2.AdId AND B.UserId = ?);

-- Customers should also be able to perform the following transactions with regard to advertisements:
-- - Purchase one or more copies of an advertised item
INSERT INTO Sales(TransId, TransDate, TransTime, AdId, NumOfUnits, AccountNum) value (?, ?, ?, ?, ?, ?);
INSERT INTO Buy(TransId, EmpId, UserId) values (?, ?, ?);

-- While customers (users) will not be permitted to access the database directly, they should be able to retrieve the following information:
-- - A customer's current groups
CREATE VIEW UserGroups AS
  SELECT G.GroupName
    FROM GroupPlus G
      WHERE EXISTS (SELECT * FROM HasAccessToGroup H
             WHERE H.UserID = ? AND H.GroupID = G.GroupID);
             
-- - For each of a customer's accounts, the account history
CREATE VIEW AccountHistory AS
	SELECT * FROM Sales
    WHERE AccountNum = ?;
    
-- - Best-Seller list of items
CREATE VIEW Best_Seller AS
SELECT 
    *
FROM
    Sales S,
    (SELECT 
        COUNT(*) AS cnt, TransId
    FROM
        Buy B
    GROUP BY B.TransId) C
WHERE S.TransId = C.TransId
ORDER BY C.cnt DESC;

-- - Personalized item suggestion list
CREATE VIEW PersonalSuggestion AS
SELECT Company, ItemName, Content, UnitPrice FROM AdData A1
	WHERE A1.Type IN (
    SELECT Type 
    FROM AdData A2, Buy B, Sales S 
    WHERE B.TransId = S.TransId AND S.AdId = A2.AdId AND B.UserId = ?);

-- ----------------------------------------------- With actual query data
-- - Produce a list of transactions by item name or by user name
SELECT
	* 
FROM 
	Sales S, Buy B
WHERE 
	S.TransId = B.TransId AND
	S.AdId = (SELECT A.AdId FROM AdData A WHERE A.ItemName = 'Google Car');
    
SELECT
    B.UserId, SUM(S.NumOfUnits * A.UnitPrice) AS total
FROM
    AdData A, Buy B, Sales S
WHERE 
	S.TransId = B.TransId AND
    S.AdId = A.AdId AND
    B.UserId = ( SELECT U.UserId FROM UserPlus U WHERE U.LastName = 'Fodor' AND U.FirstName = 'Paul')
GROUP BY
	B.UserId;
  
-- - Produce a summary listing of revenue generated by a particular item, item type, or customer
SELECT
    A.Itemname, SUM(S.NumOfUnits * A.UnitPrice) AS total
FROM
    AdData A, Buy B, Sales S
WHERE 
	S.TransId = B.TransId AND
    S.AdId = A.AdId AND
    A.AdId = ( SELECT AdId FROM AdData A2 WHERE A2.ItemName = 'Jerrel')
GROUP BY
	A.Itemname;
    
SELECT
    A.Type, SUM(S.NumOfUnits * A.UnitPrice) AS total
FROM
    AdData A, Buy B, Sales S
WHERE 
	S.TransId = B.TransId AND
    S.AdId = A.AdId AND
    A.AdId in ( SELECT AdId FROM AdData A2 WHERE A2.Type = 'Cars')
GROUP BY
	A.Type;
    
SELECT
    CONCAT(U.LastName, ' ', U.FirstName) AS identifier, SUM(S.NumOfUnits * A.UnitPrice) AS total
FROM
    AdData A, Buy B, Sales S, UserPlus U
WHERE 
	S.TransId = B.TransId AND
    S.AdId = A.AdId AND
    B.UserId in (SELECT UserId FROM UserPlus U WHERE U.LastName = 'Fodor' AND U.FirstName = 'Paul') AND
    B.UserId = U.UserId
GROUP BY
	B.UserId;


-- - Determine which customer representative generated most total revenue
SELECT 
    T.who, SUM(sales) AS total
FROM
    (SELECT 
        B.EmpId AS who, (A.UnitPrice * S.NumOfUnits) AS sales
    FROM
        AdData A, Sales S, Buy B
    WHERE
        A.AdId = S.AdId
            AND B.TransId = S.TransId) T
GROUP BY T.who
ORDER BY total DESC;

-- - Determine which customer generated most total revenue
SELECT 
    T.who, SUM(bought) AS total
FROM
    (SELECT 
        B.UserId AS who, (A.UnitPrice * S.NumOfUnits) AS bought
    FROM
        AdData A, Sales S, Buy B
    WHERE
        A.AdId = S.AdId
            AND B.TransId = S.TransId) T
GROUP BY T.who
ORDER BY total DESC;
        
-- - Produce a list of most active items?
CREATE VIEW ActiveItems AS
    SELECT 
        A.ItemName
    FROM
        AdData A
    WHERE
        (SELECT 
                COUNT(*)
            FROM
                Sales S
            WHERE
                S.AdId = A.AdId) > 20;

-- - Produce a list of all customers who have purchased a particular item
CREATE VIEW ItemPurchasers AS
    SELECT 
        *
    FROM
        UserPlus U
    WHERE
        EXISTS (SELECT 
                *
            FROM
                AdData A,
                Buy B,
                Sales S
            WHERE
                A.AdId = 1 AND A.AdId = S.AdId
                    AND S.TransId = B.TransId
                    AND U.UserId = B.UserId);

-- - Produce a list of all items for a given company
CREATE VIEW CompanyItems AS 
  SELECT A.ItemName 
    FROM AdData A
      WHERE A.Company = 'google';

-- Customer-Representative-Level Transactions
-- Customer Representatives should be thought of as sales agents and should be able to:
-- - Create an advertisement
INSERT INTO AdData(AdId, EmpId, Type, Company, ItemName, Content, UnitPrice, NumOfAvaUnits) 
VALUES (11, 269768789, 'Book', 'ABC', 'Competitive Programming', 'Book about competitive prog', 1000, 245);

-- - Delete an advertisement
DELETE FROM AdData WHERE AdId = 11;

-- - Record a transaction
INSERT INTO Sales(TransId, TransDate, TransTime, AdId, NumOfUnits, AccountNum) 
VALUES (12, '2016-02-23', '14:24:21', 10, 2, 11111234);

INSERT INTO Buy(TransId, EmpId, UserId) 
VALUES (12, 168375077, 3);

-- - Produce customer mailing lists
CREATE VIEW MailingList_Google AS
    SELECT 
        A.Company, U.Email
    FROM
        Buy B,
        Sales S,
        AdData A,
        UserPlus U
    WHERE
        B.TransId = S.TransId
            AND B.UserId = U.UserId
            AND A.AdId = S.AdId
            AND A.Company = 'google';
    
-- - Produce a list of item suggestions for a given customer (based on that customer's past transactions)
SELECT 
    *
FROM
    AdData A1
WHERE
    A1.Type IN (SELECT 
            Type
        FROM
            AdData A2,
            Buy B,
            Sales S
        WHERE
            B.TransId = S.TransId
                AND S.AdId = A2.AdId
                AND B.UserId = 1);
    
    
-- Customers should also be able to perform the following transactions with regard to advertisements:
-- - Purchase one or more copies of an advertised item
INSERT INTO Sales VALUES(11, '2016-10-01',  '11:11:00', 1, 100,   12341234);
INSERT INTO Buy(TransId, EmpId, UserId) values (11, 153581835, 1);

-- While customers (users) will not be permitted to access the database directly, they should be able to retrieve the following information:
-- - A customer's current groups
CREATE VIEW UserGroups AS
    SELECT 
        G.GroupName
    FROM
        GroupPlus G
    WHERE
        EXISTS( SELECT 
                *
            FROM
                HasAccessToGroup H
            WHERE
                H.UserID = 1 AND H.GroupID = G.GroupID);
             
  -- - For each of a customer's accounts, the account history
CREATE VIEW AccountHistory AS
    SELECT 
        *
    FROM
        Sales
    WHERE
        AccountNum = 11111111;
    
-- - Best-Seller list of items
SELECT 
    *
FROM
    Sales S,
    (SELECT 
        COUNT(*) AS cnt, TransId
    FROM
        Buy B
    GROUP BY B.TransId) C
WHERE
    S.TransId = C.TransId
ORDER BY C.cnt DESC;

-- - Personalized item suggestion list
CREATE VIEW PersonalSuggestion AS
SELECT Company, ItemName, Content, UnitPrice FROM AdData A1
	WHERE A1.Type IN (
    SELECT Type 
    FROM AdData A2, Buy B, Sales S 
    WHERE B.TransId = S.TransId AND S.AdId = A2.AdId AND B.UserId = 1);
    